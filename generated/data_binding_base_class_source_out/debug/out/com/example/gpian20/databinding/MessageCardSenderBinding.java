// Generated by view binder compiler. Do not edit!
package com.example.gpian20.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gpian20.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MessageCardSenderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView developerCard;

  @NonNull
  public final CardView imagecard;

  @NonNull
  public final CardView mainCard;

  @NonNull
  public final TextView message;

  @NonNull
  public final LinearLayout textlayout;

  @NonNull
  public final TextView timeStamp;

  @NonNull
  public final ImageView userimage;

  @NonNull
  public final TextView username;

  private MessageCardSenderBinding(@NonNull LinearLayout rootView, @NonNull CardView developerCard,
      @NonNull CardView imagecard, @NonNull CardView mainCard, @NonNull TextView message,
      @NonNull LinearLayout textlayout, @NonNull TextView timeStamp, @NonNull ImageView userimage,
      @NonNull TextView username) {
    this.rootView = rootView;
    this.developerCard = developerCard;
    this.imagecard = imagecard;
    this.mainCard = mainCard;
    this.message = message;
    this.textlayout = textlayout;
    this.timeStamp = timeStamp;
    this.userimage = userimage;
    this.username = username;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MessageCardSenderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MessageCardSenderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.message_card_sender, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MessageCardSenderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.developerCard;
      CardView developerCard = ViewBindings.findChildViewById(rootView, id);
      if (developerCard == null) {
        break missingId;
      }

      id = R.id.imagecard;
      CardView imagecard = ViewBindings.findChildViewById(rootView, id);
      if (imagecard == null) {
        break missingId;
      }

      id = R.id.mainCard;
      CardView mainCard = ViewBindings.findChildViewById(rootView, id);
      if (mainCard == null) {
        break missingId;
      }

      id = R.id.message;
      TextView message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.textlayout;
      LinearLayout textlayout = ViewBindings.findChildViewById(rootView, id);
      if (textlayout == null) {
        break missingId;
      }

      id = R.id.timeStamp;
      TextView timeStamp = ViewBindings.findChildViewById(rootView, id);
      if (timeStamp == null) {
        break missingId;
      }

      id = R.id.userimage;
      ImageView userimage = ViewBindings.findChildViewById(rootView, id);
      if (userimage == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new MessageCardSenderBinding((LinearLayout) rootView, developerCard, imagecard,
          mainCard, message, textlayout, timeStamp, userimage, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.gpian20.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gpian20.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWasteFragBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final TextView titleTxt11;

  @NonNull
  public final TextView titleTxt12;

  @NonNull
  public final CardView wasteB;

  private FragmentWasteFragBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageView2, @NonNull TextView titleTxt11, @NonNull TextView titleTxt12,
      @NonNull CardView wasteB) {
    this.rootView = rootView;
    this.imageView2 = imageView2;
    this.titleTxt11 = titleTxt11;
    this.titleTxt12 = titleTxt12;
    this.wasteB = wasteB;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWasteFragBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWasteFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_waste_frag, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWasteFragBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.titleTxt11;
      TextView titleTxt11 = ViewBindings.findChildViewById(rootView, id);
      if (titleTxt11 == null) {
        break missingId;
      }

      id = R.id.titleTxt12;
      TextView titleTxt12 = ViewBindings.findChildViewById(rootView, id);
      if (titleTxt12 == null) {
        break missingId;
      }

      id = R.id.waste_b;
      CardView wasteB = ViewBindings.findChildViewById(rootView, id);
      if (wasteB == null) {
        break missingId;
      }

      return new FragmentWasteFragBinding((ConstraintLayout) rootView, imageView2, titleTxt11,
          titleTxt12, wasteB);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

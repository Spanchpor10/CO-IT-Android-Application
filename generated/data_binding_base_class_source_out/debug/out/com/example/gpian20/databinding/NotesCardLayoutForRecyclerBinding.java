// Generated by view binder compiler. Do not edit!
package com.example.gpian20.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gpian20.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotesCardLayoutForRecyclerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final ImageView menupopButton;

  @NonNull
  public final LinearLayout note;

  @NonNull
  public final TextView noteTitle;

  @NonNull
  public final CardView notecard;

  @NonNull
  public final TextView subTitle;

  private NotesCardLayoutForRecyclerBinding(@NonNull RelativeLayout rootView, @NonNull View divider,
      @NonNull ImageView menupopButton, @NonNull LinearLayout note, @NonNull TextView noteTitle,
      @NonNull CardView notecard, @NonNull TextView subTitle) {
    this.rootView = rootView;
    this.divider = divider;
    this.menupopButton = menupopButton;
    this.note = note;
    this.noteTitle = noteTitle;
    this.notecard = notecard;
    this.subTitle = subTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotesCardLayoutForRecyclerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotesCardLayoutForRecyclerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notes_card_layout_for_recycler, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotesCardLayoutForRecyclerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.menupopButton;
      ImageView menupopButton = ViewBindings.findChildViewById(rootView, id);
      if (menupopButton == null) {
        break missingId;
      }

      id = R.id.note;
      LinearLayout note = ViewBindings.findChildViewById(rootView, id);
      if (note == null) {
        break missingId;
      }

      id = R.id.note_title;
      TextView noteTitle = ViewBindings.findChildViewById(rootView, id);
      if (noteTitle == null) {
        break missingId;
      }

      id = R.id.notecard;
      CardView notecard = ViewBindings.findChildViewById(rootView, id);
      if (notecard == null) {
        break missingId;
      }

      id = R.id.subTitle;
      TextView subTitle = ViewBindings.findChildViewById(rootView, id);
      if (subTitle == null) {
        break missingId;
      }

      return new NotesCardLayoutForRecyclerBinding((RelativeLayout) rootView, divider,
          menupopButton, note, noteTitle, notecard, subTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

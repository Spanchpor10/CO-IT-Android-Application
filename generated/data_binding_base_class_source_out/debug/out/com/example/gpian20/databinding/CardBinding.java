// Generated by view binder compiler. Do not edit!
package com.example.gpian20.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gpian20.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView attachCard;

  @NonNull
  public final TextView demoByName2;

  @NonNull
  public final RelativeLayout demoCardCon;

  @NonNull
  public final TextView demoDate2;

  @NonNull
  public final CardView demoNoticePre;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final TextView noticeDesc3;

  @NonNull
  public final TextView noticeTitle2;

  private CardBinding(@NonNull RelativeLayout rootView, @NonNull CardView attachCard,
      @NonNull TextView demoByName2, @NonNull RelativeLayout demoCardCon,
      @NonNull TextView demoDate2, @NonNull CardView demoNoticePre, @NonNull ImageView imageView4,
      @NonNull TextView noticeDesc3, @NonNull TextView noticeTitle2) {
    this.rootView = rootView;
    this.attachCard = attachCard;
    this.demoByName2 = demoByName2;
    this.demoCardCon = demoCardCon;
    this.demoDate2 = demoDate2;
    this.demoNoticePre = demoNoticePre;
    this.imageView4 = imageView4;
    this.noticeDesc3 = noticeDesc3;
    this.noticeTitle2 = noticeTitle2;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attachCard;
      CardView attachCard = ViewBindings.findChildViewById(rootView, id);
      if (attachCard == null) {
        break missingId;
      }

      id = R.id.demoByName2;
      TextView demoByName2 = ViewBindings.findChildViewById(rootView, id);
      if (demoByName2 == null) {
        break missingId;
      }

      id = R.id.demoCardCon;
      RelativeLayout demoCardCon = ViewBindings.findChildViewById(rootView, id);
      if (demoCardCon == null) {
        break missingId;
      }

      id = R.id.demoDate2;
      TextView demoDate2 = ViewBindings.findChildViewById(rootView, id);
      if (demoDate2 == null) {
        break missingId;
      }

      id = R.id.demoNoticePre;
      CardView demoNoticePre = ViewBindings.findChildViewById(rootView, id);
      if (demoNoticePre == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.noticeDesc3;
      TextView noticeDesc3 = ViewBindings.findChildViewById(rootView, id);
      if (noticeDesc3 == null) {
        break missingId;
      }

      id = R.id.noticeTitle2;
      TextView noticeTitle2 = ViewBindings.findChildViewById(rootView, id);
      if (noticeTitle2 == null) {
        break missingId;
      }

      return new CardBinding((RelativeLayout) rootView, attachCard, demoByName2, demoCardCon,
          demoDate2, demoNoticePre, imageView4, noticeDesc3, noticeTitle2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
